import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';
import { ApiProperty } from '@nestjs/swagger';
import { IsString, IsNotEmpty, IsOptional, MaxLength, IsUUID, Matches } from 'class-validator';

@Entity('projects')
export class Project {
  @PrimaryGeneratedColumn('uuid')
  @ApiProperty({ description: 'Unique identifier for the project' })
  @IsUUID('4', { message: 'Project ID must be a valid UUID' })
  @IsOptional() // ID is generated by the database
  id: string;

  @Column({ name: 'user_id' })
  @ApiProperty({ description: 'User ID who owns this project' })
  @IsNotEmpty({ message: 'User ID is required' })
  @IsString({ message: 'User ID must be a string' })
  userId: string;

  @Column()
  @ApiProperty({ description: 'Project name' })
  @IsNotEmpty({ message: 'Project name is required' })
  @IsString({ message: 'Project name must be a string' })
  @MaxLength(100, { message: 'Project name cannot exceed 100 characters' })
  name: string;

  @Column({ type: 'text', nullable: true })
  @ApiProperty({ 
    description: 'Project description', 
    required: false,
    maxLength: 1000
  })
  @IsOptional()
  @IsString({ message: 'Project description must be a string' })
  @MaxLength(1000, { message: 'Project description cannot exceed 1000 characters' })
  @Matches(/^[^<>]*$/, { message: 'Project description cannot contain HTML tags' })
  description?: string;

  @Column({ name: 'description_updated_at', type: 'timestamp with time zone', nullable: true })
  @ApiProperty({ description: 'Last description update timestamp' })
  @IsOptional()
  descriptionUpdatedAt?: Date;

  @CreateDateColumn({ name: 'created_at' })
  @ApiProperty({ description: 'Timestamp when the project was created' })
  createdAt: Date;

  @UpdateDateColumn({ name: 'updated_at' })
  @ApiProperty({ description: 'Timestamp when the project was last updated' })
  updatedAt: Date;
}